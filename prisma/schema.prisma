// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String     @id @default(uuid())
    name          String
    username      String
    email         String     @unique
    password_hash String
    created_at    DateTime   @default(now())
    like          Like[]
    book_list     BookList[]
    read          Read[]

    @@map("users")
}

model Book {
    id           String    @id @default(uuid())
    title        String
    subtitle     String?
    authors      String[]
    publisher    String?
    publish_date DateTime?
    language     String?
    page_count   Int?
    description  String?

    book_list    BookList? @relation(fields: [book_list_id], references: [id])
    book_list_id String?
    like         Like[]
    read         Read[]
}

enum ReadStatus {
    ACTIVE
    FINISHED
    CANCELLED
}

model Read {
    id             String     @id @default(uuid())
    start_date     DateTime   @default(now())
    end_date       DateTime?
    status         ReadStatus @default(ACTIVE)
    is_private     Boolean    @default(false)
    review_rating  Float?
    review_content String?
    user           User       @relation(fields: [user_id], references: [id])
    user_id        String
    book           Book       @relation(fields: [book_id], references: [id])
    book_id        String
    progress       Progress[]
}

model Progress {
    id          String   @id @default(uuid())
    description String?
    is_spoiler  Boolean
    page        Int?
    percentage  Float?
    created_at  DateTime @default(now())
    read        Read     @relation(fields: [read_id], references: [id])
    read_id     String
}

model Like {
    id      String @id @default(uuid())
    user    User   @relation(fields: [user_id], references: [id])
    user_id String
    book    Book   @relation(fields: [book_id], references: [id])
    book_id String
}

model BookList {
    id      String @id @default(uuid())
    name    String
    books   Book[]
    user    User   @relation(fields: [user_id], references: [id])
    user_id String
}
